<!DOCTYPE HTML>
<html lang="ja">
<head>
	<meta charset="UTF-8"/>
	<title><: $show.title :></title>
    <link rel="stylesheet" href="/plugin/slideshow/default.css" />
    <style type="text/css">

#controller {
    }
    #active-controller,
    #draft-controller {
        padding: .2em 1em;
        background-color: #000;
        background: -webkit-gradient(linear, left top, left bottom, from(#000), to(#222));
        background: -moz-linear-gradient(top#000, #222);
    }
    #draft-controller {
        text-align: right;
        }
    #controller #status {
        height: 100%;
        color: #fff;
        }

    #controller ul {
        margin: 0;
        padding:0;
        text-align: right;
        list-style:none;
        }
        #controller ul li{
            display: inline-block;
            }

    </style>
</head>

<body>

    <nav id="controller">
        <div id="active-controller">
            <ul>
                <li><a href="javascript:void(0)" id="back"><img src="/img/mono_icons/circleleft32.png" alt="戻る" /></a></li>
                <li><a href="javascript:void(0)" id="next"><img src="/img/mono_icons/circleright32.png" alt="進む" /></a></li>
                <li><a href="javascript:void(0)" id="status-show"><img src="/img/mono_icons/gear32.png" alt="ツールバーを閉じる" /></a></li>
            </ul>
            <div id="status"></div>
        </div>
    </nav>

<div id="container">

    :format_from_xatena($show.content) | raw

    <footer id="global-footer">
        <p></p>
    </footer>
</div>

<script type="text/javascript" src="/plugin/jquery-1.6.4.min.js"></script>
<script type="text/javascript" src="/plugin/slideshow/jquery.slideshow.js"></script>
<script type="text/javascript">
"use strict";
$(function(){
    var sl = $.slideShow({
        section_tag: 'section',
        title_tag  : ':not(article)',
        content_tag: 'article',
    });

    // controller
    $(window)
        .slideControllerKeys({mode:'next', keys:[13, 39, 78]})
        .slideControllerKeys({mode:'back', keys:[37, 66, 80]});

    var $controller = $("#controller");
    var $status = $controller.find("#status");
    $controller.find('#next').slideControllerButton({mode:'next'});
    $controller.find('#back').slideControllerButton({mode:'back'});
    $status.hide();
    $controller.find('#status-show').toggle(function(){
        $status.show();
    }, function(){
        $status.hide();
    });

    // websocket
    var rid = "<: $show.rid :>";
    var ws  = "ws://"+location.host+"/websocket/"+rid;
    var socket;
    if      (typeof WebSocket != 'undefined')       socket = new WebSocket(ws);
    else if (typeof MozWebSocket != 'undefined')    socket = new MozWebSocket(ws);
    else {
        alert('WebSocket非対応です');
        return false;
    }
    var connection_interval = setInterval(function(){socket.send('ping')}, 200000);

    socket.onopen = function() {
        $status.text("open websocket");
    };

    var auth_key = "";
    var authorize = function(key){
        if(key===undefined || auth_key) return;
        //dialogを表示
        var input_key = window.prompt("通信キーを入力してください");
        if  (key == input_key) {
            socket.send(JSON.stringify({mode:'connection-res', key:key, response:'ok'}));
            $status.text('connect');
            auth_key = key;
        } else {
            alert('faile');
            socket.send(JSON.stringify({mode:'connection-res', key:key, response:'faile'}));
            $status.text('no-connection');
        }
    };
    socket.onmessage = function (msg){
        var res = JSON.parse(msg.data);
        switch(res.mode){
            case 'connect': authorize(res.key); break;
            case 'next':
                if (auth_key != res.key) break;
                sl.nextPage(location.pathname); break;
            case 'back':
                if (auth_key != res.key) break;
                sl.backPage(location.pathname); break;
        }
    };

    socket.onclose = function(){
        $status.text('close websocket');
        auth_key = "";
    }
});
</script>

</body>
</html>
